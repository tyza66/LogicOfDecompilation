理解音效精灵
查壳发现有UPX壳 EP段在UPX
直接上UPX Unpacker脱壳 或者也可以用OD手动脱壳

拖入OD之后选否 不压缩代码
点单步发现右侧esp寄存器变红了可以用esp定位
右键esp 点数据窗口中跟随 左下角的地址栏00000000的位置右键 断点 硬件访问 word
程序暂停之后点运行在jnz和jmp之间双击下一个断点
之后在这行右键 断点 运行到选定位置就行了
jmp之后就到了oep
在oep这一行右键选择用OD脱壳调试进程
获取EIP作为OEP就行了
之后找到LordPE 找到进程 右键点完整转存
复制一下修正为中的地址
之后发现出来的程序暂时无法运行
之后用ImportREC
之后附加到一个活动进程 选刚才那个音效精灵 之后修改OEP为刚才那个修正为中的地址（保留前面两个0）
之后点获取输入表
发现全部是否
点自动查找IAT 再获取输入表 现在变成全部有效了
之后点击修复转存文件
选择刚才LordPE中出来的文件
报错IAT仍然无效，你不得不手动修正所有未解决的指针
修复完之后会多一个下划线的文件
打开文件试一下发现正常打开了 说明脱壳成功
之后拖入peid发现ep段变成了upx0 peSniffer变成了VC++
说明没有脱干净
拖入OD还是显示压缩
进程序领口发现全是花了的指令 全是乱的 不好修改了
那不行的话就上UPX Unpacker 用原本的upx1
直接网上搜upx1脱壳工具
有很多可用的软件比如UPX静态脱壳机
往里面一拉就脱壳完成了 bak是原本的备份
之后用pid看一下EP段变成.text
证明这次脱壳脱干净了
拖进OD里面一看就很干净了
也可以右键分析代码了

脱好了壳
开OD拖软件 软件里面无论点哪都会弹出登录框（自绘的框不是系统框）
右键中文搜索ASCII码 找到登陆附近 找到试用游客的位置
在pusb ebp 下一个断点
pusb ebp通常是函数开头，可保证在函数结束时，能够恢复原来的堆栈帧指针，从而保证调用者的堆栈帧不受影响
之后通过下断点找到底哪句话弹出的登录界面
用字符串搜索也可以
往上找ret下面的push ebp那里打个断点试一下
在这个pusb ebp点击的时候下面会显示来自某某地址的调用
去每一个地址 去他的上面有一个条件跳转 都打个断点
鼠标右键来自那里就可以转到那些地方
ctrl+-回去 找第二个 之后找到所有的

之后把刚才那些地址复制一下保存一下
点一下 发现跳转到哪个条件跳转 看看是不是列表里面的
上面写的是跳转未实现
右键汇编 之后将jnz改为jmp 就是无条件跳转
之后运行发现没问题了
再点一下发现被断点卡住，放一下断点就行了
之后复制这块关键地址到剪切板存起来
再去第二个地址看看
都改成jmp
回去看一下效果发现可以了
测一下发现所有首页的功能都可以直接用了
改完还是可以在OD里面保存 之后直接运行即可
